name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (e.g., dev, staging, prod)"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - staging
          - prod

  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Checkov
        run: |
          pip install checkov
          checkov --version

      - name: Run Checkov
        continue-on-error: true
        run: |
          cd ./Infra
          checkov --directory . --config-file .checkov.yaml

      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y terraform

      - name: Terraform Init
        run: |
          cd ./Infra
          terraform init

      - name: Terraform Validate
        run: |
          cd ./Infra
          terraform validate

      - name: Run TFLint
        continue-on-error: true
        run: |
          cd ./Infra
          tflint --init
          tflint --config .tflint.hcl

      - name: Terraform Workspace Select or Create
        run: |
          cd ./Infra
          terraform workspace select ${{ github.event.inputs.environment || 'dev' }} || terraform workspace new ${{ github.event.inputs.environment || 'dev' }}

      - name: Terraform Plan
        run: |
          cd ./Infra
          terraform plan -out=tfplan

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Generate Markdown with Terraform Docs
        if: ${{ github.event_name == 'pull_request' }}
        uses: terraform-docs/gh-actions@v1.3.0
        with:
          working-dir: ./Infra
          output-file: README.md
          output-method: inject
          git-push: true
          config-file: .terraform-docs.yml

      - name: Post README.md as PR Comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          header: "Terraform Documentation ðŸ“–"
          path: "./Infra/README.md"

      - name: Apply Terraform on Merge the PR
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          cd ./Infra
          terraform init
          terraform apply -auto-approve
